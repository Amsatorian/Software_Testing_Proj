<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.supplier.mapper.SupplierMapper">
    
    <resultMap type="Supplier" id="SupplierResult">
        <result property="supplierId"    column="supplier_id"    />
        <result property="name"    column="name"    />
        <result property="contactNumber"    column="contact_number"    />
        <result property="email"    column="email"    />
        <result property="address"    column="address"    />
        <result property="country"    column="country"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSupplierVo">
        select supplier_id, name, contact_number, email, address, country, status, create_time, update_time from supplier
    </sql>

    <select id="selectSupplierList" parameterType="Supplier" resultMap="SupplierResult">
        <include refid="selectSupplierVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="contactNumber != null  and contactNumber != ''"> and contact_number = #{contactNumber}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
            <if test="country != null  and country != ''"> and country = #{country}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectSupplierBySupplierId" parameterType="Long" resultMap="SupplierResult">
        <include refid="selectSupplierVo"/>
        where supplier_id = #{supplierId}
    </select>

    <insert id="insertSupplier" parameterType="Supplier" useGeneratedKeys="true" keyProperty="supplierId">
        insert into supplier
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="contactNumber != null">contact_number,</if>
            <if test="email != null">email,</if>
            <if test="address != null">address,</if>
            <if test="country != null">country,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="contactNumber != null">#{contactNumber},</if>
            <if test="email != null">#{email},</if>
            <if test="address != null">#{address},</if>
            <if test="country != null">#{country},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSupplier" parameterType="Supplier">
        update supplier
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="contactNumber != null">contact_number = #{contactNumber},</if>
            <if test="email != null">email = #{email},</if>
            <if test="address != null">address = #{address},</if>
            <if test="country != null">country = #{country},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where supplier_id = #{supplierId}
    </update>

    <delete id="deleteSupplierBySupplierId" parameterType="Long">
        delete from supplier where supplier_id = #{supplierId}
    </delete>

    <delete id="deleteSupplierBySupplierIds" parameterType="String">
        delete from supplier where supplier_id in 
        <foreach item="supplierId" collection="array" open="(" separator="," close=")">
            #{supplierId}
        </foreach>
    </delete>
</mapper>
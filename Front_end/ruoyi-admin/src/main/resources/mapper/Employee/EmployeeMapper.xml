<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.Employee.mapper.EmployeeMapper">
    
    <resultMap type="Employee" id="EmployeeResult">
        <result property="employeeId"    column="employee_id"    />
        <result property="name"    column="name"    />
        <result property="contactNumber"    column="contact_number"    />
        <result property="email"    column="email"    />
        <result property="position"    column="position"    />
        <result property="hireDate"    column="hire_date"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectEmployeeVo">
        select employee_id, name, contact_number, email, position, hire_date, status, create_time, update_time from employee
    </sql>

    <select id="selectEmployeeList" parameterType="Employee" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="contactNumber != null  and contactNumber != ''"> and contact_number = #{contactNumber}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="position != null  and position != ''"> and position = #{position}</if>
            <if test="hireDate != null "> and hire_date = #{hireDate}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectEmployeeByEmployeeId" parameterType="Long" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        where employee_id = #{employeeId}
    </select>

    <insert id="insertEmployee" parameterType="Employee" useGeneratedKeys="true" keyProperty="employeeId">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="contactNumber != null">contact_number,</if>
            <if test="email != null">email,</if>
            <if test="position != null and position != ''">position,</if>
            <if test="hireDate != null">hire_date,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="contactNumber != null">#{contactNumber},</if>
            <if test="email != null">#{email},</if>
            <if test="position != null and position != ''">#{position},</if>
            <if test="hireDate != null">#{hireDate},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateEmployee" parameterType="Employee">
        update employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="contactNumber != null">contact_number = #{contactNumber},</if>
            <if test="email != null">email = #{email},</if>
            <if test="position != null and position != ''">position = #{position},</if>
            <if test="hireDate != null">hire_date = #{hireDate},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where employee_id = #{employeeId}
    </update>

    <delete id="deleteEmployeeByEmployeeId" parameterType="Long">
        delete from employee where employee_id = #{employeeId}
    </delete>

    <delete id="deleteEmployeeByEmployeeIds" parameterType="String">
        delete from employee where employee_id in 
        <foreach item="employeeId" collection="array" open="(" separator="," close=")">
            #{employeeId}
        </foreach>
    </delete>
</mapper>